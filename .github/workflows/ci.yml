# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ 2.x, 1.x ]
  pull_request:
    branches: [ 2.x, 1.x ]
  release:
    # Only use the types keyword to narrow down the activity types that will trigger your workflow.
    types: [published, created, edited]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set minimal permissions needed for Composer + GitHub Packages
permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Analyse code by PHPStan
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    # This workflow is only of value to the ebics-api/ebics-client-php repository and
    # would always fail in forks
    if: github.repository == 'ebics-api/ebics-client-php'
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Composer Install
        run: composer install --no-scripts --no-progress --ansi
      - name: Run phpstan
        run: composer code-analyse

  # Style code by Code Sniffer
  phpcs:
    name: PHPCS
    runs-on: ubuntu-latest
    # This workflow is only of value to the ebics-api/ebics-client-php repository and
    # would always fail in forks
    if: github.repository == 'ebics-api/ebics-client-php'
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Composer Install
        run: composer install --no-scripts --no-progress --ansi
      - name: Run phpcs
        run: composer code-style

  # Test code by PHPUnit
  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    # This workflow is only of value to ebics-api/ebics-client-php repository and
    # would always fail in forks
    if: github.repository == 'ebics-api/ebics-client-php'
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
      - name: Composer Install
        run: composer install --no-scripts --no-progress --ansi
      - name: Prepare data
        run: unzip -P "$PASSWORD" ./tests/_data.zip -d .
      - name: Run phpunit
        env:
            PASSWORD: ${{ secrets.PWD }}
        run: composer code-test
